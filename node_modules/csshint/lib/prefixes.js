'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getPrefixList = getPrefixList;
exports.getPrefixMap = getPrefixMap;
/**
 * @file prefixes
 * @author ielgnaw(wuji0223@gmail.com)
 */

/**
 * 所有的 prefixes
 * http://peter.sh/experiments/vendor-prefixed-css-property-overview/
 * value 后有空格说明有标准模式
 *
 * @type {Object}
 */
var prefixes = {
    /* eslint-disable fecs-camelcase */

    'animation': 'webkit moz ',
    'animation-delay': 'webkit moz ',
    'animation-direction': 'webkit moz ',
    'animation-duration': 'webkit moz ',
    'animation-fill-mode': 'webkit moz ',
    'animation-iteration-count': 'webkit moz ',
    'animation-name': 'webkit moz ',
    'animation-play-state': 'webkit moz ',
    'animation-timing-function': 'webkit moz ',
    'appearance': 'webkit moz ',
    'border-end': 'webkit moz ',
    'border-end-color': 'webkit moz ',
    'border-end-style': 'webkit moz ',
    'border-end-width': 'webkit moz ',
    'border-image': 'webkit moz o ',
    'border-radius': 'webkit moz ',
    'border-start': 'webkit moz ',
    'border-start-color': 'webkit moz ',
    'border-start-style': 'webkit moz ',
    'border-start-width': 'webkit moz ',
    'box-align': 'webkit moz ms ',
    'box-direction': 'webkit moz ms ',
    'box-flex': 'webkit moz ms ',
    'box-lines': 'webkit ms ',
    'box-ordinal-group': 'webkit moz ms ',
    'box-orient': 'webkit moz ms ',
    'box-pack': 'webkit moz ms ',
    'box-sizing': 'webkit moz ',
    'box-shadow': 'webkit moz ',
    'column-count': 'webkit moz ms ',
    'column-gap': 'webkit moz ms ',
    'column-rule': 'webkit moz ms ',
    'column-rule-color': 'webkit moz ms ',
    'column-rule-style': 'webkit moz ms ',
    'column-rule-width': 'webkit moz ms ',
    'column-width': 'webkit moz ms ',
    'hyphens': 'epub moz ',
    'line-break': 'webkit ms ',
    'margin-end': 'webkit moz ',
    'margin-start': 'webkit moz ',
    'marquee-speed': 'webkit wap ',
    'marquee-style': 'webkit wap ',
    'padding-end': 'webkit moz ',
    'padding-start': 'webkit moz ',
    'tab-size': 'moz o ',
    'text-size-adjust': 'webkit ms ',
    'transform': 'webkit moz ms o ',
    'transform-origin': 'webkit moz ms o ',
    'transition': 'webkit moz o ',
    'transition-delay': 'webkit moz o ',
    'transition-duration': 'webkit moz o ',
    'transition-property': 'webkit moz o ',
    'transition-timing-function': 'webkit moz o ',
    'user-modify': 'webkit moz ',
    'user-select': 'webkit moz ms ',
    'word-break': 'epub ms ',
    'writing-mode': 'epub ms',
    'background-size': 'webkit moz o ',
    'flex': 'webkit moz ms ',
    'filter': 'webkit ',
    'background-clip': 'webkit moz khtml ',
    'justify-content': 'webkit moz ',
    'align-items': 'webkit ',
    'backface-visibility': 'webkit moz ',
    'flex-direction': 'webkit ms ',
    'align-self': 'webkit '

    /* eslint-enable fecs-camelcase */
};

var arrayPush = Array.prototype.push;
var allPrefixes = [];

/* eslint-disable fecs-use-for-of, fecs-valid-map-set */
for (var prop in prefixes) {
    if (prefixes.hasOwnProperty(prop)) {
        var variations = [];
        var prefixed = prefixes[prop].split(' ');
        for (var i = 0, len = prefixed.length; i < len; i++) {
            // 标准模式
            if (prefixed[i] === '') {
                variations.push(prop);
            } else {
                variations.push('-' + prefixed[i] + '-' + prop);
            }
        }
        prefixes[prop] = variations;
        arrayPush.apply(allPrefixes, variations);
    }
}
/* eslint-enable fecs-use-for-of, fecs-valid-map-set */

/**
 * 获取所有的 prefixes
 *
 * @return {Array} 集合
 */
function getPrefixList() {
    return allPrefixes;
}

/**
 * 获取所有的 prefixes
 *
 * @return {Array} 集合
 */
function getPrefixMap() {
    return prefixes;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wcmVmaXhlcy5qcyJdLCJuYW1lcyI6WyJnZXRQcmVmaXhMaXN0IiwiZ2V0UHJlZml4TWFwIiwicHJlZml4ZXMiLCJhcnJheVB1c2giLCJBcnJheSIsInByb3RvdHlwZSIsInB1c2giLCJhbGxQcmVmaXhlcyIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsInZhcmlhdGlvbnMiLCJwcmVmaXhlZCIsInNwbGl0IiwiaSIsImxlbiIsImxlbmd0aCIsImFwcGx5Il0sIm1hcHBpbmdzIjoiOzs7OztRQWtIZ0JBLGEsR0FBQUEsYTtRQVNBQyxZLEdBQUFBLFk7QUEzSGhCOzs7OztBQUtBOzs7Ozs7O0FBT0EsSUFBTUMsV0FBVztBQUNiOztBQUVBLGlCQUFhLGFBSEE7QUFJYix1QkFBbUIsYUFKTjtBQUtiLDJCQUF1QixhQUxWO0FBTWIsMEJBQXNCLGFBTlQ7QUFPYiwyQkFBdUIsYUFQVjtBQVFiLGlDQUE2QixhQVJoQjtBQVNiLHNCQUFrQixhQVRMO0FBVWIsNEJBQXdCLGFBVlg7QUFXYixpQ0FBNkIsYUFYaEI7QUFZYixrQkFBYyxhQVpEO0FBYWIsa0JBQWMsYUFiRDtBQWNiLHdCQUFvQixhQWRQO0FBZWIsd0JBQW9CLGFBZlA7QUFnQmIsd0JBQW9CLGFBaEJQO0FBaUJiLG9CQUFnQixlQWpCSDtBQWtCYixxQkFBaUIsYUFsQko7QUFtQmIsb0JBQWdCLGFBbkJIO0FBb0JiLDBCQUFzQixhQXBCVDtBQXFCYiwwQkFBc0IsYUFyQlQ7QUFzQmIsMEJBQXNCLGFBdEJUO0FBdUJiLGlCQUFhLGdCQXZCQTtBQXdCYixxQkFBaUIsZ0JBeEJKO0FBeUJiLGdCQUFZLGdCQXpCQztBQTBCYixpQkFBYSxZQTFCQTtBQTJCYix5QkFBcUIsZ0JBM0JSO0FBNEJiLGtCQUFjLGdCQTVCRDtBQTZCYixnQkFBWSxnQkE3QkM7QUE4QmIsa0JBQWMsYUE5QkQ7QUErQmIsa0JBQWMsYUEvQkQ7QUFnQ2Isb0JBQWdCLGdCQWhDSDtBQWlDYixrQkFBYyxnQkFqQ0Q7QUFrQ2IsbUJBQWUsZ0JBbENGO0FBbUNiLHlCQUFxQixnQkFuQ1I7QUFvQ2IseUJBQXFCLGdCQXBDUjtBQXFDYix5QkFBcUIsZ0JBckNSO0FBc0NiLG9CQUFnQixnQkF0Q0g7QUF1Q2IsZUFBVyxXQXZDRTtBQXdDYixrQkFBYyxZQXhDRDtBQXlDYixrQkFBYyxhQXpDRDtBQTBDYixvQkFBZ0IsYUExQ0g7QUEyQ2IscUJBQWlCLGFBM0NKO0FBNENiLHFCQUFpQixhQTVDSjtBQTZDYixtQkFBZSxhQTdDRjtBQThDYixxQkFBaUIsYUE5Q0o7QUErQ2IsZ0JBQVksUUEvQ0M7QUFnRGIsd0JBQW9CLFlBaERQO0FBaURiLGlCQUFhLGtCQWpEQTtBQWtEYix3QkFBb0Isa0JBbERQO0FBbURiLGtCQUFjLGVBbkREO0FBb0RiLHdCQUFvQixlQXBEUDtBQXFEYiwyQkFBdUIsZUFyRFY7QUFzRGIsMkJBQXVCLGVBdERWO0FBdURiLGtDQUE4QixlQXZEakI7QUF3RGIsbUJBQWUsYUF4REY7QUF5RGIsbUJBQWUsZ0JBekRGO0FBMERiLGtCQUFjLFVBMUREO0FBMkRiLG9CQUFnQixTQTNESDtBQTREYix1QkFBbUIsZUE1RE47QUE2RGIsWUFBUSxnQkE3REs7QUE4RGIsY0FBVSxTQTlERztBQStEYix1QkFBbUIsbUJBL0ROO0FBZ0ViLHVCQUFtQixhQWhFTjtBQWlFYixtQkFBZSxTQWpFRjtBQWtFYiwyQkFBdUIsYUFsRVY7QUFtRWIsc0JBQWtCLFlBbkVMO0FBb0ViLGtCQUFjOztBQUVkO0FBdEVhLENBQWpCOztBQTBFQSxJQUFNQyxZQUFZQyxNQUFNQyxTQUFOLENBQWdCQyxJQUFsQztBQUNBLElBQU1DLGNBQWMsRUFBcEI7O0FBRUE7QUFDQSxLQUFLLElBQU1DLElBQVgsSUFBbUJOLFFBQW5CLEVBQTZCO0FBQ3pCLFFBQUlBLFNBQVNPLGNBQVQsQ0FBd0JELElBQXhCLENBQUosRUFBbUM7QUFDL0IsWUFBTUUsYUFBYSxFQUFuQjtBQUNBLFlBQU1DLFdBQVdULFNBQVNNLElBQVQsRUFBZUksS0FBZixDQUFxQixHQUFyQixDQUFqQjtBQUNBLGFBQUssSUFBSUMsSUFBSSxDQUFSLEVBQVdDLE1BQU1ILFNBQVNJLE1BQS9CLEVBQXVDRixJQUFJQyxHQUEzQyxFQUFnREQsR0FBaEQsRUFBcUQ7QUFDakQ7QUFDQSxnQkFBSUYsU0FBU0UsQ0FBVCxNQUFnQixFQUFwQixFQUF3QjtBQUNwQkgsMkJBQVdKLElBQVgsQ0FBZ0JFLElBQWhCO0FBQ0gsYUFGRCxNQUdLO0FBQ0RFLDJCQUFXSixJQUFYLENBQWdCLE1BQU1LLFNBQVNFLENBQVQsQ0FBTixHQUFvQixHQUFwQixHQUEwQkwsSUFBMUM7QUFDSDtBQUNKO0FBQ0ROLGlCQUFTTSxJQUFULElBQWlCRSxVQUFqQjtBQUNBUCxrQkFBVWEsS0FBVixDQUFnQlQsV0FBaEIsRUFBNkJHLFVBQTdCO0FBQ0g7QUFDSjtBQUNEOztBQUVBOzs7OztBQUtPLFNBQVNWLGFBQVQsR0FBeUI7QUFDNUIsV0FBT08sV0FBUDtBQUNIOztBQUVEOzs7OztBQUtPLFNBQVNOLFlBQVQsR0FBd0I7QUFDM0IsV0FBT0MsUUFBUDtBQUNIIiwiZmlsZSI6InByZWZpeGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBwcmVmaXhlc1xuICogQGF1dGhvciBpZWxnbmF3KHd1amkwMjIzQGdtYWlsLmNvbSlcbiAqL1xuXG4vKipcbiAqIOaJgOacieeahCBwcmVmaXhlc1xuICogaHR0cDovL3BldGVyLnNoL2V4cGVyaW1lbnRzL3ZlbmRvci1wcmVmaXhlZC1jc3MtcHJvcGVydHktb3ZlcnZpZXcvXG4gKiB2YWx1ZSDlkI7mnInnqbrmoLzor7TmmI7mnInmoIflh4bmqKHlvI9cbiAqXG4gKiBAdHlwZSB7T2JqZWN0fVxuICovXG5jb25zdCBwcmVmaXhlcyA9IHtcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBmZWNzLWNhbWVsY2FzZSAqL1xuXG4gICAgJ2FuaW1hdGlvbic6ICd3ZWJraXQgbW96ICcsXG4gICAgJ2FuaW1hdGlvbi1kZWxheSc6ICd3ZWJraXQgbW96ICcsXG4gICAgJ2FuaW1hdGlvbi1kaXJlY3Rpb24nOiAnd2Via2l0IG1veiAnLFxuICAgICdhbmltYXRpb24tZHVyYXRpb24nOiAnd2Via2l0IG1veiAnLFxuICAgICdhbmltYXRpb24tZmlsbC1tb2RlJzogJ3dlYmtpdCBtb3ogJyxcbiAgICAnYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudCc6ICd3ZWJraXQgbW96ICcsXG4gICAgJ2FuaW1hdGlvbi1uYW1lJzogJ3dlYmtpdCBtb3ogJyxcbiAgICAnYW5pbWF0aW9uLXBsYXktc3RhdGUnOiAnd2Via2l0IG1veiAnLFxuICAgICdhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uJzogJ3dlYmtpdCBtb3ogJyxcbiAgICAnYXBwZWFyYW5jZSc6ICd3ZWJraXQgbW96ICcsXG4gICAgJ2JvcmRlci1lbmQnOiAnd2Via2l0IG1veiAnLFxuICAgICdib3JkZXItZW5kLWNvbG9yJzogJ3dlYmtpdCBtb3ogJyxcbiAgICAnYm9yZGVyLWVuZC1zdHlsZSc6ICd3ZWJraXQgbW96ICcsXG4gICAgJ2JvcmRlci1lbmQtd2lkdGgnOiAnd2Via2l0IG1veiAnLFxuICAgICdib3JkZXItaW1hZ2UnOiAnd2Via2l0IG1veiBvICcsXG4gICAgJ2JvcmRlci1yYWRpdXMnOiAnd2Via2l0IG1veiAnLFxuICAgICdib3JkZXItc3RhcnQnOiAnd2Via2l0IG1veiAnLFxuICAgICdib3JkZXItc3RhcnQtY29sb3InOiAnd2Via2l0IG1veiAnLFxuICAgICdib3JkZXItc3RhcnQtc3R5bGUnOiAnd2Via2l0IG1veiAnLFxuICAgICdib3JkZXItc3RhcnQtd2lkdGgnOiAnd2Via2l0IG1veiAnLFxuICAgICdib3gtYWxpZ24nOiAnd2Via2l0IG1veiBtcyAnLFxuICAgICdib3gtZGlyZWN0aW9uJzogJ3dlYmtpdCBtb3ogbXMgJyxcbiAgICAnYm94LWZsZXgnOiAnd2Via2l0IG1veiBtcyAnLFxuICAgICdib3gtbGluZXMnOiAnd2Via2l0IG1zICcsXG4gICAgJ2JveC1vcmRpbmFsLWdyb3VwJzogJ3dlYmtpdCBtb3ogbXMgJyxcbiAgICAnYm94LW9yaWVudCc6ICd3ZWJraXQgbW96IG1zICcsXG4gICAgJ2JveC1wYWNrJzogJ3dlYmtpdCBtb3ogbXMgJyxcbiAgICAnYm94LXNpemluZyc6ICd3ZWJraXQgbW96ICcsXG4gICAgJ2JveC1zaGFkb3cnOiAnd2Via2l0IG1veiAnLFxuICAgICdjb2x1bW4tY291bnQnOiAnd2Via2l0IG1veiBtcyAnLFxuICAgICdjb2x1bW4tZ2FwJzogJ3dlYmtpdCBtb3ogbXMgJyxcbiAgICAnY29sdW1uLXJ1bGUnOiAnd2Via2l0IG1veiBtcyAnLFxuICAgICdjb2x1bW4tcnVsZS1jb2xvcic6ICd3ZWJraXQgbW96IG1zICcsXG4gICAgJ2NvbHVtbi1ydWxlLXN0eWxlJzogJ3dlYmtpdCBtb3ogbXMgJyxcbiAgICAnY29sdW1uLXJ1bGUtd2lkdGgnOiAnd2Via2l0IG1veiBtcyAnLFxuICAgICdjb2x1bW4td2lkdGgnOiAnd2Via2l0IG1veiBtcyAnLFxuICAgICdoeXBoZW5zJzogJ2VwdWIgbW96ICcsXG4gICAgJ2xpbmUtYnJlYWsnOiAnd2Via2l0IG1zICcsXG4gICAgJ21hcmdpbi1lbmQnOiAnd2Via2l0IG1veiAnLFxuICAgICdtYXJnaW4tc3RhcnQnOiAnd2Via2l0IG1veiAnLFxuICAgICdtYXJxdWVlLXNwZWVkJzogJ3dlYmtpdCB3YXAgJyxcbiAgICAnbWFycXVlZS1zdHlsZSc6ICd3ZWJraXQgd2FwICcsXG4gICAgJ3BhZGRpbmctZW5kJzogJ3dlYmtpdCBtb3ogJyxcbiAgICAncGFkZGluZy1zdGFydCc6ICd3ZWJraXQgbW96ICcsXG4gICAgJ3RhYi1zaXplJzogJ21veiBvICcsXG4gICAgJ3RleHQtc2l6ZS1hZGp1c3QnOiAnd2Via2l0IG1zICcsXG4gICAgJ3RyYW5zZm9ybSc6ICd3ZWJraXQgbW96IG1zIG8gJyxcbiAgICAndHJhbnNmb3JtLW9yaWdpbic6ICd3ZWJraXQgbW96IG1zIG8gJyxcbiAgICAndHJhbnNpdGlvbic6ICd3ZWJraXQgbW96IG8gJyxcbiAgICAndHJhbnNpdGlvbi1kZWxheSc6ICd3ZWJraXQgbW96IG8gJyxcbiAgICAndHJhbnNpdGlvbi1kdXJhdGlvbic6ICd3ZWJraXQgbW96IG8gJyxcbiAgICAndHJhbnNpdGlvbi1wcm9wZXJ0eSc6ICd3ZWJraXQgbW96IG8gJyxcbiAgICAndHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24nOiAnd2Via2l0IG1veiBvICcsXG4gICAgJ3VzZXItbW9kaWZ5JzogJ3dlYmtpdCBtb3ogJyxcbiAgICAndXNlci1zZWxlY3QnOiAnd2Via2l0IG1veiBtcyAnLFxuICAgICd3b3JkLWJyZWFrJzogJ2VwdWIgbXMgJyxcbiAgICAnd3JpdGluZy1tb2RlJzogJ2VwdWIgbXMnLFxuICAgICdiYWNrZ3JvdW5kLXNpemUnOiAnd2Via2l0IG1veiBvICcsXG4gICAgJ2ZsZXgnOiAnd2Via2l0IG1veiBtcyAnLFxuICAgICdmaWx0ZXInOiAnd2Via2l0ICcsXG4gICAgJ2JhY2tncm91bmQtY2xpcCc6ICd3ZWJraXQgbW96IGtodG1sICcsXG4gICAgJ2p1c3RpZnktY29udGVudCc6ICd3ZWJraXQgbW96ICcsXG4gICAgJ2FsaWduLWl0ZW1zJzogJ3dlYmtpdCAnLFxuICAgICdiYWNrZmFjZS12aXNpYmlsaXR5JzogJ3dlYmtpdCBtb3ogJyxcbiAgICAnZmxleC1kaXJlY3Rpb24nOiAnd2Via2l0IG1zICcsXG4gICAgJ2FsaWduLXNlbGYnOiAnd2Via2l0ICdcblxuICAgIC8qIGVzbGludC1lbmFibGUgZmVjcy1jYW1lbGNhc2UgKi9cbn07XG5cblxuY29uc3QgYXJyYXlQdXNoID0gQXJyYXkucHJvdG90eXBlLnB1c2g7XG5jb25zdCBhbGxQcmVmaXhlcyA9IFtdO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBmZWNzLXVzZS1mb3Itb2YsIGZlY3MtdmFsaWQtbWFwLXNldCAqL1xuZm9yIChjb25zdCBwcm9wIGluIHByZWZpeGVzKSB7XG4gICAgaWYgKHByZWZpeGVzLmhhc093blByb3BlcnR5KHByb3ApKSB7XG4gICAgICAgIGNvbnN0IHZhcmlhdGlvbnMgPSBbXTtcbiAgICAgICAgY29uc3QgcHJlZml4ZWQgPSBwcmVmaXhlc1twcm9wXS5zcGxpdCgnICcpO1xuICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gcHJlZml4ZWQubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIC8vIOagh+WHhuaooeW8j1xuICAgICAgICAgICAgaWYgKHByZWZpeGVkW2ldID09PSAnJykge1xuICAgICAgICAgICAgICAgIHZhcmlhdGlvbnMucHVzaChwcm9wKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhcmlhdGlvbnMucHVzaCgnLScgKyBwcmVmaXhlZFtpXSArICctJyArIHByb3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHByZWZpeGVzW3Byb3BdID0gdmFyaWF0aW9ucztcbiAgICAgICAgYXJyYXlQdXNoLmFwcGx5KGFsbFByZWZpeGVzLCB2YXJpYXRpb25zKTtcbiAgICB9XG59XG4vKiBlc2xpbnQtZW5hYmxlIGZlY3MtdXNlLWZvci1vZiwgZmVjcy12YWxpZC1tYXAtc2V0ICovXG5cbi8qKlxuICog6I635Y+W5omA5pyJ55qEIHByZWZpeGVzXG4gKlxuICogQHJldHVybiB7QXJyYXl9IOmbhuWQiFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJlZml4TGlzdCgpIHtcbiAgICByZXR1cm4gYWxsUHJlZml4ZXM7XG59XG5cbi8qKlxuICog6I635Y+W5omA5pyJ55qEIHByZWZpeGVzXG4gKlxuICogQHJldHVybiB7QXJyYXl9IOmbhuWQiFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJlZml4TWFwKCkge1xuICAgIHJldHVybiBwcmVmaXhlcztcbn1cbiJdfQ==