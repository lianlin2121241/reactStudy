'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.check = undefined;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 当前文件所代表的规则名称
 *
 * @const
 * @type {string}
 */
/**
 * @file no-bom 的检测逻辑
 *       001: [建议] `CSS` 文件使用无 `BOM` 的 `UTF-8` 编码。
 * @author ielgnaw(wuji0223@gmail.com)
 */

var RULENAME = 'no-bom';

/**
 * 错误的信息
 *
 * @const
 * @type {string}
 */
var MSG = 'CSS file should using UTF-8 coding without BOM';

/**
 * 具体的检测逻辑
 *
 * @param {Object} opts 参数
 * @param {*} opts.ruleVal 当前规则具体配置的值
 * @param {string} opts.fileContent 文件内容
 * @param {string} opts.filePath 文件路径
 */
var check = exports.check = _postcss2.default.plugin(RULENAME, function (opts) {
    return function (css, result) {
        if (opts.ruleVal) {

            if (global.CSSHINT_INVALID_ALL_COUNT >= opts.maxError) {
                return;
            }

            var bufContent = new Buffer(opts.fileContent, 'utf8');

            var hasBOM = bufContent[0] === 0xEF && bufContent[1] === 0xBB && bufContent[2] === 0xBF || // UTF-8 +BOM
            bufContent[0] === 0xEF && bufContent[1] === 0xBF && bufContent[2] === 0xBD; // unicode UTF16 LE

            if (hasBOM) {
                result.warn(RULENAME, {
                    node: css,
                    ruleName: RULENAME,
                    message: MSG,
                    colorMessage: _chalk2.default.grey(MSG)
                });
                global.CSSHINT_INVALID_ALL_COUNT++;
            }
        }
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlL25vLWJvbS5qcyJdLCJuYW1lcyI6WyJSVUxFTkFNRSIsIk1TRyIsImNoZWNrIiwicGx1Z2luIiwiY3NzIiwicmVzdWx0Iiwib3B0cyIsInJ1bGVWYWwiLCJnbG9iYWwiLCJDU1NISU5UX0lOVkFMSURfQUxMX0NPVU5UIiwibWF4RXJyb3IiLCJidWZDb250ZW50IiwiQnVmZmVyIiwiZmlsZUNvbnRlbnQiLCJoYXNCT00iLCJ3YXJuIiwibm9kZSIsInJ1bGVOYW1lIiwibWVzc2FnZSIsImNvbG9yTWVzc2FnZSIsImdyZXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFNQTs7OztBQUNBOzs7Ozs7QUFFQTs7Ozs7O0FBVEE7Ozs7OztBQWVBLElBQU1BLFdBQVcsUUFBakI7O0FBRUE7Ozs7OztBQU1BLElBQU1DLE1BQU0sZ0RBQVo7O0FBRUE7Ozs7Ozs7O0FBUU8sSUFBTUMsd0JBQVEsa0JBQVFDLE1BQVIsQ0FBZUgsUUFBZixFQUF5QjtBQUFBLFdBQzFDLFVBQUNJLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUNiLFlBQUlDLEtBQUtDLE9BQVQsRUFBa0I7O0FBRWQsZ0JBQUlDLE9BQU9DLHlCQUFQLElBQW9DSCxLQUFLSSxRQUE3QyxFQUF1RDtBQUNuRDtBQUNIOztBQUVELGdCQUFNQyxhQUFhLElBQUlDLE1BQUosQ0FBV04sS0FBS08sV0FBaEIsRUFBNkIsTUFBN0IsQ0FBbkI7O0FBRUEsZ0JBQU1DLFNBQ0NILFdBQVcsQ0FBWCxNQUFrQixJQUFsQixJQUEwQkEsV0FBVyxDQUFYLE1BQWtCLElBQTVDLElBQW9EQSxXQUFXLENBQVgsTUFBa0IsSUFBdkUsSUFBNkU7QUFDdkVBLHVCQUFXLENBQVgsTUFBa0IsSUFBbEIsSUFBMEJBLFdBQVcsQ0FBWCxNQUFrQixJQUE1QyxJQUFvREEsV0FBVyxDQUFYLE1BQWtCLElBRmxGLENBUmMsQ0FVMkU7O0FBRXpGLGdCQUFJRyxNQUFKLEVBQVk7QUFDUlQsdUJBQU9VLElBQVAsQ0FBWWYsUUFBWixFQUFzQjtBQUNsQmdCLDBCQUFNWixHQURZO0FBRWxCYSw4QkFBVWpCLFFBRlE7QUFHbEJrQiw2QkFBU2pCLEdBSFM7QUFJbEJrQixrQ0FBYyxnQkFBTUMsSUFBTixDQUFXbkIsR0FBWDtBQUpJLGlCQUF0QjtBQU1BTyx1QkFBT0MseUJBQVA7QUFDSDtBQUNKO0FBQ0osS0F4QnlDO0FBQUEsQ0FBekIsQ0FBZCIsImZpbGUiOiJuby1ib20uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIG5vLWJvbSDnmoTmo4DmtYvpgLvovpFcbiAqICAgICAgIDAwMTogW+W7uuiurl0gYENTU2Ag5paH5Lu25L2/55So5pegIGBCT01gIOeahCBgVVRGLThgIOe8lueggeOAglxuICogQGF1dGhvciBpZWxnbmF3KHd1amkwMjIzQGdtYWlsLmNvbSlcbiAqL1xuXG5pbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnO1xuaW1wb3J0IHBvc3Rjc3MgZnJvbSAncG9zdGNzcyc7XG5cbi8qKlxuICog5b2T5YmN5paH5Lu25omA5Luj6KGo55qE6KeE5YiZ5ZCN56ewXG4gKlxuICogQGNvbnN0XG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5jb25zdCBSVUxFTkFNRSA9ICduby1ib20nO1xuXG4vKipcbiAqIOmUmeivr+eahOS/oeaBr1xuICpcbiAqIEBjb25zdFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuY29uc3QgTVNHID0gJ0NTUyBmaWxlIHNob3VsZCB1c2luZyBVVEYtOCBjb2Rpbmcgd2l0aG91dCBCT00nO1xuXG4vKipcbiAqIOWFt+S9k+eahOajgOa1i+mAu+i+kVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIOWPguaVsFxuICogQHBhcmFtIHsqfSBvcHRzLnJ1bGVWYWwg5b2T5YmN6KeE5YiZ5YW35L2T6YWN572u55qE5YC8XG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0cy5maWxlQ29udGVudCDmlofku7blhoXlrrlcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLmZpbGVQYXRoIOaWh+S7tui3r+W+hFxuICovXG5leHBvcnQgY29uc3QgY2hlY2sgPSBwb3N0Y3NzLnBsdWdpbihSVUxFTkFNRSwgb3B0cyA9PlxuICAgIChjc3MsIHJlc3VsdCkgPT4ge1xuICAgICAgICBpZiAob3B0cy5ydWxlVmFsKSB7XG5cbiAgICAgICAgICAgIGlmIChnbG9iYWwuQ1NTSElOVF9JTlZBTElEX0FMTF9DT1VOVCA+PSBvcHRzLm1heEVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBidWZDb250ZW50ID0gbmV3IEJ1ZmZlcihvcHRzLmZpbGVDb250ZW50LCAndXRmOCcpO1xuXG4gICAgICAgICAgICBjb25zdCBoYXNCT01cbiAgICAgICAgICAgICAgICA9IChidWZDb250ZW50WzBdID09PSAweEVGICYmIGJ1ZkNvbnRlbnRbMV0gPT09IDB4QkIgJiYgYnVmQ29udGVudFsyXSA9PT0gMHhCRikgLy8gVVRGLTggK0JPTVxuICAgICAgICAgICAgICAgICAgICB8fCAoYnVmQ29udGVudFswXSA9PT0gMHhFRiAmJiBidWZDb250ZW50WzFdID09PSAweEJGICYmIGJ1ZkNvbnRlbnRbMl0gPT09IDB4QkQpOyAvLyB1bmljb2RlIFVURjE2IExFXG5cbiAgICAgICAgICAgIGlmIChoYXNCT00pIHtcbiAgICAgICAgICAgICAgICByZXN1bHQud2FybihSVUxFTkFNRSwge1xuICAgICAgICAgICAgICAgICAgICBub2RlOiBjc3MsXG4gICAgICAgICAgICAgICAgICAgIHJ1bGVOYW1lOiBSVUxFTkFNRSxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogTVNHLFxuICAgICAgICAgICAgICAgICAgICBjb2xvck1lc3NhZ2U6IGNoYWxrLmdyZXkoTVNHKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGdsb2JhbC5DU1NISU5UX0lOVkFMSURfQUxMX0NPVU5UKys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4pO1xuIl19