'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.check = undefined;

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 当前文件所代表的规则名称
 *
 * @const
 * @type {string}
 */
/**
 * @file underscore-property-hack 的检测逻辑
 *       Checks for the underscore property hack (targets IE6)
 *       https://github.com/CSSLint/csslint/wiki/Disallow-underscore-hack
 * @author ielgnaw(wuji0223@gmail.com)
 */

var RULENAME = 'underscore-property-hack';

/**
 * 错误的信息
 *
 * @const
 * @type {string}
 */
var MSG = 'Disallow properties with a underscore prefix';

/**
 * 具体的检测逻辑
 *
 * @param {Object} opts 参数
 * @param {*} opts.ruleVal 当前规则具体配置的值
 * @param {string} opts.fileContent 文件内容
 * @param {string} opts.filePath 文件路径
 */
var check = exports.check = _postcss2.default.plugin(RULENAME, function (opts) {
    return function (css, result) {

        if (opts.ruleVal) {

            css.walkDecls(function (decl) {
                if (global.CSSHINT_INVALID_ALL_COUNT >= opts.maxError) {
                    return;
                }

                var before = decl.raws.before;

                if (before.slice(-1) === '_') {
                    var source = decl.source;
                    var line = source.start.line;
                    var lineContent = (0, _util.getLineContent)(line, source.input.css);
                    var col = source.start.column;
                    result.warn(RULENAME, {
                        node: decl,
                        ruleName: RULENAME,
                        line: line,
                        col: col,
                        message: MSG,
                        colorMessage: '`' + (0, _util.changeColorByStartAndEndIndex)(lineContent, col, source.end.column) + '` '
                    });

                    global.CSSHINT_INVALID_ALL_COUNT++;
                }
            });
        }
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlL3VuZGVyc2NvcmUtcHJvcGVydHktaGFjay5qcyJdLCJuYW1lcyI6WyJSVUxFTkFNRSIsIk1TRyIsImNoZWNrIiwicGx1Z2luIiwiY3NzIiwicmVzdWx0Iiwib3B0cyIsInJ1bGVWYWwiLCJ3YWxrRGVjbHMiLCJnbG9iYWwiLCJDU1NISU5UX0lOVkFMSURfQUxMX0NPVU5UIiwibWF4RXJyb3IiLCJiZWZvcmUiLCJkZWNsIiwicmF3cyIsInNsaWNlIiwic291cmNlIiwibGluZSIsInN0YXJ0IiwibGluZUNvbnRlbnQiLCJpbnB1dCIsImNvbCIsImNvbHVtbiIsIndhcm4iLCJub2RlIiwicnVsZU5hbWUiLCJtZXNzYWdlIiwiY29sb3JNZXNzYWdlIiwiZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBT0E7Ozs7QUFFQTs7OztBQUVBOzs7Ozs7QUFYQTs7Ozs7OztBQWlCQSxJQUFNQSxXQUFXLDBCQUFqQjs7QUFFQTs7Ozs7O0FBTUEsSUFBTUMsTUFBTSw4Q0FBWjs7QUFFQTs7Ozs7Ozs7QUFRTyxJQUFNQyx3QkFBUSxrQkFBUUMsTUFBUixDQUFlSCxRQUFmLEVBQXlCO0FBQUEsV0FDMUMsVUFBQ0ksR0FBRCxFQUFNQyxNQUFOLEVBQWlCOztBQUViLFlBQUlDLEtBQUtDLE9BQVQsRUFBa0I7O0FBRWRILGdCQUFJSSxTQUFKLENBQWMsZ0JBQVE7QUFDbEIsb0JBQUlDLE9BQU9DLHlCQUFQLElBQW9DSixLQUFLSyxRQUE3QyxFQUF1RDtBQUNuRDtBQUNIOztBQUVELG9CQUFNQyxTQUFTQyxLQUFLQyxJQUFMLENBQVVGLE1BQXpCOztBQUVBLG9CQUFJQSxPQUFPRyxLQUFQLENBQWEsQ0FBQyxDQUFkLE1BQXFCLEdBQXpCLEVBQThCO0FBQzFCLHdCQUFNQyxTQUFTSCxLQUFLRyxNQUFwQjtBQUNBLHdCQUFNQyxPQUFPRCxPQUFPRSxLQUFQLENBQWFELElBQTFCO0FBQ0Esd0JBQU1FLGNBQWMsMEJBQWVGLElBQWYsRUFBcUJELE9BQU9JLEtBQVAsQ0FBYWhCLEdBQWxDLENBQXBCO0FBQ0Esd0JBQU1pQixNQUFNTCxPQUFPRSxLQUFQLENBQWFJLE1BQXpCO0FBQ0FqQiwyQkFBT2tCLElBQVAsQ0FBWXZCLFFBQVosRUFBc0I7QUFDbEJ3Qiw4QkFBTVgsSUFEWTtBQUVsQlksa0NBQVV6QixRQUZRO0FBR2xCaUIsOEJBQU1BLElBSFk7QUFJbEJJLDZCQUFLQSxHQUphO0FBS2xCSyxpQ0FBU3pCLEdBTFM7QUFNbEIwQixzQ0FBYyxNQUNSLHlDQUNFUixXQURGLEVBQ2VFLEdBRGYsRUFDb0JMLE9BQU9ZLEdBQVAsQ0FBV04sTUFEL0IsQ0FEUSxHQUlSO0FBVlkscUJBQXRCOztBQWFBYiwyQkFBT0MseUJBQVA7QUFDSDtBQUNKLGFBM0JEO0FBNEJIO0FBQ0osS0FsQ3lDO0FBQUEsQ0FBekIsQ0FBZCIsImZpbGUiOiJ1bmRlcnNjb3JlLXByb3BlcnR5LWhhY2suanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIHVuZGVyc2NvcmUtcHJvcGVydHktaGFjayDnmoTmo4DmtYvpgLvovpFcbiAqICAgICAgIENoZWNrcyBmb3IgdGhlIHVuZGVyc2NvcmUgcHJvcGVydHkgaGFjayAodGFyZ2V0cyBJRTYpXG4gKiAgICAgICBodHRwczovL2dpdGh1Yi5jb20vQ1NTTGludC9jc3NsaW50L3dpa2kvRGlzYWxsb3ctdW5kZXJzY29yZS1oYWNrXG4gKiBAYXV0aG9yIGllbGduYXcod3VqaTAyMjNAZ21haWwuY29tKVxuICovXG5cbmltcG9ydCBwb3N0Y3NzIGZyb20gJ3Bvc3Rjc3MnO1xuXG5pbXBvcnQge2dldExpbmVDb250ZW50LCBjaGFuZ2VDb2xvckJ5U3RhcnRBbmRFbmRJbmRleH0gZnJvbSAnLi4vdXRpbCc7XG5cbi8qKlxuICog5b2T5YmN5paH5Lu25omA5Luj6KGo55qE6KeE5YiZ5ZCN56ewXG4gKlxuICogQGNvbnN0XG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5jb25zdCBSVUxFTkFNRSA9ICd1bmRlcnNjb3JlLXByb3BlcnR5LWhhY2snO1xuXG4vKipcbiAqIOmUmeivr+eahOS/oeaBr1xuICpcbiAqIEBjb25zdFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuY29uc3QgTVNHID0gJ0Rpc2FsbG93IHByb3BlcnRpZXMgd2l0aCBhIHVuZGVyc2NvcmUgcHJlZml4JztcblxuLyoqXG4gKiDlhbfkvZPnmoTmo4DmtYvpgLvovpFcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cyDlj4LmlbBcbiAqIEBwYXJhbSB7Kn0gb3B0cy5ydWxlVmFsIOW9k+WJjeinhOWImeWFt+S9k+mFjee9rueahOWAvFxuICogQHBhcmFtIHtzdHJpbmd9IG9wdHMuZmlsZUNvbnRlbnQg5paH5Lu25YaF5a65XG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0cy5maWxlUGF0aCDmlofku7bot6/lvoRcbiAqL1xuZXhwb3J0IGNvbnN0IGNoZWNrID0gcG9zdGNzcy5wbHVnaW4oUlVMRU5BTUUsIG9wdHMgPT5cbiAgICAoY3NzLCByZXN1bHQpID0+IHtcblxuICAgICAgICBpZiAob3B0cy5ydWxlVmFsKSB7XG5cbiAgICAgICAgICAgIGNzcy53YWxrRGVjbHMoZGVjbCA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGdsb2JhbC5DU1NISU5UX0lOVkFMSURfQUxMX0NPVU5UID49IG9wdHMubWF4RXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnN0IGJlZm9yZSA9IGRlY2wucmF3cy5iZWZvcmU7XG5cbiAgICAgICAgICAgICAgICBpZiAoYmVmb3JlLnNsaWNlKC0xKSA9PT0gJ18nKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNvdXJjZSA9IGRlY2wuc291cmNlO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBsaW5lID0gc291cmNlLnN0YXJ0LmxpbmU7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGxpbmVDb250ZW50ID0gZ2V0TGluZUNvbnRlbnQobGluZSwgc291cmNlLmlucHV0LmNzcyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbCA9IHNvdXJjZS5zdGFydC5jb2x1bW47XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC53YXJuKFJVTEVOQU1FLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlOiBkZWNsLFxuICAgICAgICAgICAgICAgICAgICAgICAgcnVsZU5hbWU6IFJVTEVOQU1FLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGluZTogbGluZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbDogY29sLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogTVNHLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JNZXNzYWdlOiAnYCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICArIGNoYW5nZUNvbG9yQnlTdGFydEFuZEVuZEluZGV4KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lQ29udGVudCwgY29sLCBzb3VyY2UuZW5kLmNvbHVtblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICArICdgICdcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgZ2xvYmFsLkNTU0hJTlRfSU5WQUxJRF9BTExfQ09VTlQrKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbik7XG4iXX0=