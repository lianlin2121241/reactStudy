'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.check = undefined;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 当前文件所代表的规则名称
 *
 * @const
 * @type {string}
 */
/**
 * @file font-face 的检测逻辑
 *       Too many different web fonts in the same stylesheet
 *       https://github.com/CSSLint/csslint/wiki/Don't-use-too-many-web-fonts
 * @author ielgnaw(wuji0223@gmail.com)
 */

var RULENAME = 'font-face';

/**
 * 错误的信息
 *
 * @const
 * @type {string}
 */
var MSG = '@font-face declarations must not be greater than ';

var fontFaceCount = 0;

/**
 * 具体的检测逻辑
 *
 * @param {Object} opts 参数
 * @param {*} opts.ruleVal 当前规则具体配置的值
 * @param {string} opts.fileContent 文件内容
 * @param {string} opts.filePath 文件路径
 */
var check = exports.check = _postcss2.default.plugin(RULENAME, function (opts) {
    return function (css, result) {
        if (!opts.ruleVal || isNaN(opts.ruleVal)) {
            return;
        }

        fontFaceCount = 0;

        css.walkAtRules(function (atRule) {
            if (global.CSSHINT_INVALID_ALL_COUNT >= opts.maxError) {
                return;
            }

            if (atRule.name === 'font-face') {
                fontFaceCount++;
            }
        });

        if (fontFaceCount > opts.ruleVal) {
            var str = MSG + opts.ruleVal + ', current file @font-face declarations is ' + fontFaceCount;
            result.warn(RULENAME, {
                node: css,
                ruleName: RULENAME,
                message: str,
                colorMessage: _chalk2.default.grey(str)
            });

            global.CSSHINT_INVALID_ALL_COUNT++;
        }
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlL2ZvbnQtZmFjZS5qcyJdLCJuYW1lcyI6WyJSVUxFTkFNRSIsIk1TRyIsImZvbnRGYWNlQ291bnQiLCJjaGVjayIsInBsdWdpbiIsImNzcyIsInJlc3VsdCIsIm9wdHMiLCJydWxlVmFsIiwiaXNOYU4iLCJ3YWxrQXRSdWxlcyIsImdsb2JhbCIsIkNTU0hJTlRfSU5WQUxJRF9BTExfQ09VTlQiLCJtYXhFcnJvciIsImF0UnVsZSIsIm5hbWUiLCJzdHIiLCJ3YXJuIiwibm9kZSIsInJ1bGVOYW1lIiwibWVzc2FnZSIsImNvbG9yTWVzc2FnZSIsImdyZXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFPQTs7OztBQUNBOzs7Ozs7QUFFQTs7Ozs7O0FBVkE7Ozs7Ozs7QUFnQkEsSUFBTUEsV0FBVyxXQUFqQjs7QUFFQTs7Ozs7O0FBTUEsSUFBTUMsTUFBTSxtREFBWjs7QUFFQSxJQUFJQyxnQkFBZ0IsQ0FBcEI7O0FBRUE7Ozs7Ozs7O0FBUU8sSUFBTUMsd0JBQVEsa0JBQVFDLE1BQVIsQ0FBZUosUUFBZixFQUF5QjtBQUFBLFdBQzFDLFVBQUNLLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUNiLFlBQUksQ0FBQ0MsS0FBS0MsT0FBTixJQUFpQkMsTUFBTUYsS0FBS0MsT0FBWCxDQUFyQixFQUEwQztBQUN0QztBQUNIOztBQUVETix3QkFBZ0IsQ0FBaEI7O0FBRUFHLFlBQUlLLFdBQUosQ0FBZ0Isa0JBQVU7QUFDdEIsZ0JBQUlDLE9BQU9DLHlCQUFQLElBQW9DTCxLQUFLTSxRQUE3QyxFQUF1RDtBQUNuRDtBQUNIOztBQUVELGdCQUFJQyxPQUFPQyxJQUFQLEtBQWdCLFdBQXBCLEVBQWlDO0FBQzdCYjtBQUNIO0FBQ0osU0FSRDs7QUFVQSxZQUFJQSxnQkFBZ0JLLEtBQUtDLE9BQXpCLEVBQWtDO0FBQzlCLGdCQUFNUSxNQUFNZixNQUFNTSxLQUFLQyxPQUFYLEdBQXFCLDRDQUFyQixHQUFvRU4sYUFBaEY7QUFDQUksbUJBQU9XLElBQVAsQ0FBWWpCLFFBQVosRUFBc0I7QUFDbEJrQixzQkFBTWIsR0FEWTtBQUVsQmMsMEJBQVVuQixRQUZRO0FBR2xCb0IseUJBQVNKLEdBSFM7QUFJbEJLLDhCQUFjLGdCQUFNQyxJQUFOLENBQVdOLEdBQVg7QUFKSSxhQUF0Qjs7QUFPQUwsbUJBQU9DLHlCQUFQO0FBQ0g7QUFDSixLQTdCeUM7QUFBQSxDQUF6QixDQUFkIiwiZmlsZSI6ImZvbnQtZmFjZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgZm9udC1mYWNlIOeahOajgOa1i+mAu+i+kVxuICogICAgICAgVG9vIG1hbnkgZGlmZmVyZW50IHdlYiBmb250cyBpbiB0aGUgc2FtZSBzdHlsZXNoZWV0XG4gKiAgICAgICBodHRwczovL2dpdGh1Yi5jb20vQ1NTTGludC9jc3NsaW50L3dpa2kvRG9uJ3QtdXNlLXRvby1tYW55LXdlYi1mb250c1xuICogQGF1dGhvciBpZWxnbmF3KHd1amkwMjIzQGdtYWlsLmNvbSlcbiAqL1xuXG5pbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnO1xuaW1wb3J0IHBvc3Rjc3MgZnJvbSAncG9zdGNzcyc7XG5cbi8qKlxuICog5b2T5YmN5paH5Lu25omA5Luj6KGo55qE6KeE5YiZ5ZCN56ewXG4gKlxuICogQGNvbnN0XG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5jb25zdCBSVUxFTkFNRSA9ICdmb250LWZhY2UnO1xuXG4vKipcbiAqIOmUmeivr+eahOS/oeaBr1xuICpcbiAqIEBjb25zdFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuY29uc3QgTVNHID0gJ0Bmb250LWZhY2UgZGVjbGFyYXRpb25zIG11c3Qgbm90IGJlIGdyZWF0ZXIgdGhhbiAnO1xuXG5sZXQgZm9udEZhY2VDb3VudCA9IDA7XG5cbi8qKlxuICog5YW35L2T55qE5qOA5rWL6YC76L6RXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdHMg5Y+C5pWwXG4gKiBAcGFyYW0geyp9IG9wdHMucnVsZVZhbCDlvZPliY3op4TliJnlhbfkvZPphY3nva7nmoTlgLxcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLmZpbGVDb250ZW50IOaWh+S7tuWGheWuuVxuICogQHBhcmFtIHtzdHJpbmd9IG9wdHMuZmlsZVBhdGgg5paH5Lu26Lev5b6EXG4gKi9cbmV4cG9ydCBjb25zdCBjaGVjayA9IHBvc3Rjc3MucGx1Z2luKFJVTEVOQU1FLCBvcHRzID0+XG4gICAgKGNzcywgcmVzdWx0KSA9PiB7XG4gICAgICAgIGlmICghb3B0cy5ydWxlVmFsIHx8IGlzTmFOKG9wdHMucnVsZVZhbCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvbnRGYWNlQ291bnQgPSAwO1xuXG4gICAgICAgIGNzcy53YWxrQXRSdWxlcyhhdFJ1bGUgPT4ge1xuICAgICAgICAgICAgaWYgKGdsb2JhbC5DU1NISU5UX0lOVkFMSURfQUxMX0NPVU5UID49IG9wdHMubWF4RXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChhdFJ1bGUubmFtZSA9PT0gJ2ZvbnQtZmFjZScpIHtcbiAgICAgICAgICAgICAgICBmb250RmFjZUNvdW50Kys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChmb250RmFjZUNvdW50ID4gb3B0cy5ydWxlVmFsKSB7XG4gICAgICAgICAgICBjb25zdCBzdHIgPSBNU0cgKyBvcHRzLnJ1bGVWYWwgKyAnLCBjdXJyZW50IGZpbGUgQGZvbnQtZmFjZSBkZWNsYXJhdGlvbnMgaXMgJyArIGZvbnRGYWNlQ291bnQ7XG4gICAgICAgICAgICByZXN1bHQud2FybihSVUxFTkFNRSwge1xuICAgICAgICAgICAgICAgIG5vZGU6IGNzcyxcbiAgICAgICAgICAgICAgICBydWxlTmFtZTogUlVMRU5BTUUsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogc3RyLFxuICAgICAgICAgICAgICAgIGNvbG9yTWVzc2FnZTogY2hhbGsuZ3JleShzdHIpXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZ2xvYmFsLkNTU0hJTlRfSU5WQUxJRF9BTExfQ09VTlQrKztcbiAgICAgICAgfVxuICAgIH1cbik7XG4iXX0=