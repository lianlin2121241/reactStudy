'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.check = undefined;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 当前文件所代表的规则名称
 *
 * @const
 * @type {string}
 */
var RULENAME = 'min-font-size';

/**
 * 数字正则
 *
 * @const
 * @type {RegExp}
 */
/**
 * @file min-font-size 的检测逻辑
 *       037: [强制] 需要在 Windows 平台显示的中文内容，其字号应不小于 `12px`。
 * @author ielgnaw(wuji0223@gmail.com)
 */

var PATTERN_NUMERIC = /^\d+[\.\d]*$/;

/**
 * 错误信息
 *
 * @const
 * @type {string}
 */
var MSG = 'font-size should not be less than ';

/**
 * 具体的检测逻辑
 *
 * @param {Object} opts 参数
 * @param {*} opts.ruleVal 当前规则具体配置的值
 * @param {string} opts.fileContent 文件内容
 * @param {string} opts.filePath 文件路径
 */
var check = exports.check = _postcss2.default.plugin(RULENAME, function (opts) {
    return function (css, result) {

        if (!opts.ruleVal || isNaN(opts.ruleVal)) {
            return;
        }

        var msgWithVal = MSG + opts.ruleVal + 'px';

        css.walkDecls(function (decl) {

            if (global.CSSHINT_INVALID_ALL_COUNT >= opts.maxError) {
                return;
            }

            if (decl.prop === 'font-size') {
                if (parseFloat(decl.value) < opts.ruleVal) {
                    var source = decl.source;
                    var line = source.start.line;
                    var lineContent = (0, _util.getLineContent)(line, source.input.css);
                    var val = _postcss2.default.list.split(decl.value, 'px')[0];
                    if (PATTERN_NUMERIC.test(val)) {
                        var col = source.start.column + decl.prop.length + decl.raws.between.length;
                        result.warn(RULENAME, {
                            node: decl,
                            ruleName: RULENAME,
                            line: line,
                            col: col,
                            message: msgWithVal,
                            colorMessage: '`' + (0, _util.changeColorByStartAndEndIndex)(lineContent, col, source.end.column) + '` ' + _chalk2.default.grey(msgWithVal)
                        });
                        global.CSSHINT_INVALID_ALL_COUNT++;
                    }
                }
            }
        });
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlL21pbi1mb250LXNpemUuanMiXSwibmFtZXMiOlsiUlVMRU5BTUUiLCJQQVRURVJOX05VTUVSSUMiLCJNU0ciLCJjaGVjayIsInBsdWdpbiIsImNzcyIsInJlc3VsdCIsIm9wdHMiLCJydWxlVmFsIiwiaXNOYU4iLCJtc2dXaXRoVmFsIiwid2Fsa0RlY2xzIiwiZ2xvYmFsIiwiQ1NTSElOVF9JTlZBTElEX0FMTF9DT1VOVCIsIm1heEVycm9yIiwiZGVjbCIsInByb3AiLCJwYXJzZUZsb2F0IiwidmFsdWUiLCJzb3VyY2UiLCJsaW5lIiwic3RhcnQiLCJsaW5lQ29udGVudCIsImlucHV0IiwidmFsIiwibGlzdCIsInNwbGl0IiwidGVzdCIsImNvbCIsImNvbHVtbiIsImxlbmd0aCIsInJhd3MiLCJiZXR3ZWVuIiwid2FybiIsIm5vZGUiLCJydWxlTmFtZSIsIm1lc3NhZ2UiLCJjb2xvck1lc3NhZ2UiLCJlbmQiLCJncmV5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBTUE7Ozs7QUFDQTs7OztBQUVBOzs7O0FBRUE7Ozs7OztBQU1BLElBQU1BLFdBQVcsZUFBakI7O0FBRUE7Ozs7OztBQW5CQTs7Ozs7O0FBeUJBLElBQU1DLGtCQUFrQixjQUF4Qjs7QUFFQTs7Ozs7O0FBTUEsSUFBTUMsTUFBTSxvQ0FBWjs7QUFFQTs7Ozs7Ozs7QUFRTyxJQUFNQyx3QkFBUSxrQkFBUUMsTUFBUixDQUFlSixRQUFmLEVBQXlCO0FBQUEsV0FDMUMsVUFBQ0ssR0FBRCxFQUFNQyxNQUFOLEVBQWlCOztBQUViLFlBQUksQ0FBQ0MsS0FBS0MsT0FBTixJQUFpQkMsTUFBTUYsS0FBS0MsT0FBWCxDQUFyQixFQUEwQztBQUN0QztBQUNIOztBQUVELFlBQU1FLGFBQWFSLE1BQU1LLEtBQUtDLE9BQVgsR0FBcUIsSUFBeEM7O0FBRUFILFlBQUlNLFNBQUosQ0FBYyxnQkFBUTs7QUFFbEIsZ0JBQUlDLE9BQU9DLHlCQUFQLElBQW9DTixLQUFLTyxRQUE3QyxFQUF1RDtBQUNuRDtBQUNIOztBQUVELGdCQUFJQyxLQUFLQyxJQUFMLEtBQWMsV0FBbEIsRUFBK0I7QUFDM0Isb0JBQUlDLFdBQVdGLEtBQUtHLEtBQWhCLElBQXlCWCxLQUFLQyxPQUFsQyxFQUEyQztBQUN2Qyx3QkFBTVcsU0FBU0osS0FBS0ksTUFBcEI7QUFDQSx3QkFBTUMsT0FBT0QsT0FBT0UsS0FBUCxDQUFhRCxJQUExQjtBQUNBLHdCQUFNRSxjQUFjLDBCQUFlRixJQUFmLEVBQXFCRCxPQUFPSSxLQUFQLENBQWFsQixHQUFsQyxDQUFwQjtBQUNBLHdCQUFNbUIsTUFBTSxrQkFBUUMsSUFBUixDQUFhQyxLQUFiLENBQW1CWCxLQUFLRyxLQUF4QixFQUErQixJQUEvQixFQUFxQyxDQUFyQyxDQUFaO0FBQ0Esd0JBQUlqQixnQkFBZ0IwQixJQUFoQixDQUFxQkgsR0FBckIsQ0FBSixFQUErQjtBQUMzQiw0QkFBTUksTUFBTVQsT0FBT0UsS0FBUCxDQUFhUSxNQUFiLEdBQXNCZCxLQUFLQyxJQUFMLENBQVVjLE1BQWhDLEdBQXlDZixLQUFLZ0IsSUFBTCxDQUFVQyxPQUFWLENBQWtCRixNQUF2RTtBQUNBeEIsK0JBQU8yQixJQUFQLENBQVlqQyxRQUFaLEVBQXNCO0FBQ2xCa0Msa0NBQU1uQixJQURZO0FBRWxCb0Isc0NBQVVuQyxRQUZRO0FBR2xCb0Isa0NBQU1BLElBSFk7QUFJbEJRLGlDQUFLQSxHQUphO0FBS2xCUSxxQ0FBUzFCLFVBTFM7QUFNbEIyQiwwQ0FBYyxNQUNSLHlDQUNFZixXQURGLEVBQ2VNLEdBRGYsRUFDb0JULE9BQU9tQixHQUFQLENBQVdULE1BRC9CLENBRFEsR0FJUixJQUpRLEdBS1IsZ0JBQU1VLElBQU4sQ0FBVzdCLFVBQVg7QUFYWSx5QkFBdEI7QUFhQUUsK0JBQU9DLHlCQUFQO0FBQ0g7QUFDSjtBQUNKO0FBQ0osU0EvQkQ7QUFnQ0gsS0F6Q3lDO0FBQUEsQ0FBekIsQ0FBZCIsImZpbGUiOiJtaW4tZm9udC1zaXplLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBtaW4tZm9udC1zaXplIOeahOajgOa1i+mAu+i+kVxuICogICAgICAgMDM3OiBb5by65Yi2XSDpnIDopoHlnKggV2luZG93cyDlubPlj7DmmL7npLrnmoTkuK3mloflhoXlrrnvvIzlhbblrZflj7flupTkuI3lsI/kuo4gYDEycHhg44CCXG4gKiBAYXV0aG9yIGllbGduYXcod3VqaTAyMjNAZ21haWwuY29tKVxuICovXG5cbmltcG9ydCBjaGFsayBmcm9tICdjaGFsayc7XG5pbXBvcnQgcG9zdGNzcyBmcm9tICdwb3N0Y3NzJztcblxuaW1wb3J0IHtnZXRMaW5lQ29udGVudCwgY2hhbmdlQ29sb3JCeVN0YXJ0QW5kRW5kSW5kZXh9IGZyb20gJy4uL3V0aWwnO1xuXG4vKipcbiAqIOW9k+WJjeaWh+S7tuaJgOS7o+ihqOeahOinhOWImeWQjeensFxuICpcbiAqIEBjb25zdFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuY29uc3QgUlVMRU5BTUUgPSAnbWluLWZvbnQtc2l6ZSc7XG5cbi8qKlxuICog5pWw5a2X5q2j5YiZXG4gKlxuICogQGNvbnN0XG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG5jb25zdCBQQVRURVJOX05VTUVSSUMgPSAvXlxcZCtbXFwuXFxkXSokLztcblxuLyoqXG4gKiDplJnor6/kv6Hmga9cbiAqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmNvbnN0IE1TRyA9ICdmb250LXNpemUgc2hvdWxkIG5vdCBiZSBsZXNzIHRoYW4gJztcblxuLyoqXG4gKiDlhbfkvZPnmoTmo4DmtYvpgLvovpFcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cyDlj4LmlbBcbiAqIEBwYXJhbSB7Kn0gb3B0cy5ydWxlVmFsIOW9k+WJjeinhOWImeWFt+S9k+mFjee9rueahOWAvFxuICogQHBhcmFtIHtzdHJpbmd9IG9wdHMuZmlsZUNvbnRlbnQg5paH5Lu25YaF5a65XG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0cy5maWxlUGF0aCDmlofku7bot6/lvoRcbiAqL1xuZXhwb3J0IGNvbnN0IGNoZWNrID0gcG9zdGNzcy5wbHVnaW4oUlVMRU5BTUUsIG9wdHMgPT5cbiAgICAoY3NzLCByZXN1bHQpID0+IHtcblxuICAgICAgICBpZiAoIW9wdHMucnVsZVZhbCB8fCBpc05hTihvcHRzLnJ1bGVWYWwpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBtc2dXaXRoVmFsID0gTVNHICsgb3B0cy5ydWxlVmFsICsgJ3B4JztcblxuICAgICAgICBjc3Mud2Fsa0RlY2xzKGRlY2wgPT4ge1xuXG4gICAgICAgICAgICBpZiAoZ2xvYmFsLkNTU0hJTlRfSU5WQUxJRF9BTExfQ09VTlQgPj0gb3B0cy5tYXhFcnJvcikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGRlY2wucHJvcCA9PT0gJ2ZvbnQtc2l6ZScpIHtcbiAgICAgICAgICAgICAgICBpZiAocGFyc2VGbG9hdChkZWNsLnZhbHVlKSA8IG9wdHMucnVsZVZhbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzb3VyY2UgPSBkZWNsLnNvdXJjZTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGluZSA9IHNvdXJjZS5zdGFydC5saW5lO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBsaW5lQ29udGVudCA9IGdldExpbmVDb250ZW50KGxpbmUsIHNvdXJjZS5pbnB1dC5jc3MpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWwgPSBwb3N0Y3NzLmxpc3Quc3BsaXQoZGVjbC52YWx1ZSwgJ3B4JylbMF07XG4gICAgICAgICAgICAgICAgICAgIGlmIChQQVRURVJOX05VTUVSSUMudGVzdCh2YWwpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb2wgPSBzb3VyY2Uuc3RhcnQuY29sdW1uICsgZGVjbC5wcm9wLmxlbmd0aCArIGRlY2wucmF3cy5iZXR3ZWVuLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC53YXJuKFJVTEVOQU1FLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZTogZGVjbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBydWxlTmFtZTogUlVMRU5BTUUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZTogbGluZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2w6IGNvbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBtc2dXaXRoVmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yTWVzc2FnZTogJ2AnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgY2hhbmdlQ29sb3JCeVN0YXJ0QW5kRW5kSW5kZXgoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lQ29udGVudCwgY29sLCBzb3VyY2UuZW5kLmNvbHVtblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJ2AgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArIGNoYWxrLmdyZXkobXNnV2l0aFZhbClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2xvYmFsLkNTU0hJTlRfSU5WQUxJRF9BTExfQ09VTlQrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuKTtcbiJdfQ==