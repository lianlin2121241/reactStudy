'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.check = undefined;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _prefixes = require('../prefixes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixList = (0, _prefixes.getPrefixList)();

/**
 * 当前文件所代表的规则名称
 *
 * @const
 * @type {string}
 */
/**
 * @file property-not-existed 的检测逻辑，检测属性是否存在
 * @author ielgnaw(wuji0223@gmail.com)
 */

var RULENAME = 'property-not-existed';

/**
 * 具体的检测逻辑
 *
 * @param {Object} opts 参数
 * @param {*} opts.ruleVal 当前规则具体配置的值
 * @param {string} opts.fileContent 文件内容
 * @param {string} opts.filePath 文件路径
 */
var check = exports.check = _postcss2.default.plugin(RULENAME, function (opts) {
    return function (css, result) {

        if (opts.ruleVal) {

            css.walkDecls(function (decl) {
                if (global.CSSHINT_INVALID_ALL_COUNT >= opts.maxError) {
                    return;
                }

                var prop = decl.prop;
                var standardProperty = prop.replace(/^\-(webkit|moz|ms|o)\-/g, '');
                // 标准模式在 prefixList 中，那么如果 propertyName 不在 prefixList 中
                // 即这个属性用错了，例如 -o-animation
                if (prefixList.indexOf(standardProperty) > -1) {
                    if (prefixList.indexOf(prop) <= -1) {

                        var source = decl.source;
                        var line = source.start.line;
                        var col = source.start.column;

                        result.warn(RULENAME, {
                            node: decl,
                            ruleName: RULENAME,
                            line: line,
                            col: col,
                            message: '' + 'Current property ' + '`' + prop + '` ' + 'is not existed',
                            colorMessage: '' + 'Current property ' + '`' + _chalk2.default.magenta(prop) + '` ' + 'is not existed'
                        });
                        global.CSSHINT_INVALID_ALL_COUNT++;
                    }
                }
            });
        }
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydWxlL3Byb3BlcnR5LW5vdC1leGlzdGVkLmpzIl0sIm5hbWVzIjpbInByZWZpeExpc3QiLCJSVUxFTkFNRSIsImNoZWNrIiwicGx1Z2luIiwiY3NzIiwicmVzdWx0Iiwib3B0cyIsInJ1bGVWYWwiLCJ3YWxrRGVjbHMiLCJnbG9iYWwiLCJDU1NISU5UX0lOVkFMSURfQUxMX0NPVU5UIiwibWF4RXJyb3IiLCJwcm9wIiwiZGVjbCIsInN0YW5kYXJkUHJvcGVydHkiLCJyZXBsYWNlIiwiaW5kZXhPZiIsInNvdXJjZSIsImxpbmUiLCJzdGFydCIsImNvbCIsImNvbHVtbiIsIndhcm4iLCJub2RlIiwicnVsZU5hbWUiLCJtZXNzYWdlIiwiY29sb3JNZXNzYWdlIiwibWFnZW50YSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUtBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUVBLElBQU1BLGFBQWEsOEJBQW5COztBQUVBOzs7Ozs7QUFaQTs7Ozs7QUFrQkEsSUFBTUMsV0FBVyxzQkFBakI7O0FBRUE7Ozs7Ozs7O0FBUU8sSUFBTUMsd0JBQVEsa0JBQVFDLE1BQVIsQ0FBZUYsUUFBZixFQUF5QjtBQUFBLFdBQzFDLFVBQUNHLEdBQUQsRUFBTUMsTUFBTixFQUFpQjs7QUFFYixZQUFJQyxLQUFLQyxPQUFULEVBQWtCOztBQUVkSCxnQkFBSUksU0FBSixDQUFjLGdCQUFRO0FBQ2xCLG9CQUFJQyxPQUFPQyx5QkFBUCxJQUFvQ0osS0FBS0ssUUFBN0MsRUFBdUQ7QUFDbkQ7QUFDSDs7QUFFRCxvQkFBTUMsT0FBT0MsS0FBS0QsSUFBbEI7QUFDQSxvQkFBTUUsbUJBQW1CRixLQUFLRyxPQUFMLENBQWEseUJBQWIsRUFBd0MsRUFBeEMsQ0FBekI7QUFDQTtBQUNBO0FBQ0Esb0JBQUlmLFdBQVdnQixPQUFYLENBQW1CRixnQkFBbkIsSUFBdUMsQ0FBQyxDQUE1QyxFQUErQztBQUMzQyx3QkFBSWQsV0FBV2dCLE9BQVgsQ0FBbUJKLElBQW5CLEtBQTRCLENBQUMsQ0FBakMsRUFBb0M7O0FBRWhDLDRCQUFNSyxTQUFTSixLQUFLSSxNQUFwQjtBQUNBLDRCQUFNQyxPQUFPRCxPQUFPRSxLQUFQLENBQWFELElBQTFCO0FBQ0EsNEJBQU1FLE1BQU1ILE9BQU9FLEtBQVAsQ0FBYUUsTUFBekI7O0FBRUFoQiwrQkFBT2lCLElBQVAsQ0FBWXJCLFFBQVosRUFBc0I7QUFDbEJzQixrQ0FBTVYsSUFEWTtBQUVsQlcsc0NBQVV2QixRQUZRO0FBR2xCaUIsa0NBQU1BLElBSFk7QUFJbEJFLGlDQUFLQSxHQUphO0FBS2xCSyxxQ0FBUyxLQUNILG1CQURHLEdBRUgsR0FGRyxHQUdIYixJQUhHLEdBSUgsSUFKRyxHQUtILGdCQVZZO0FBV2xCYywwQ0FBYyxLQUNSLG1CQURRLEdBRVIsR0FGUSxHQUdSLGdCQUFNQyxPQUFOLENBQWNmLElBQWQsQ0FIUSxHQUlSLElBSlEsR0FLUjtBQWhCWSx5QkFBdEI7QUFrQkFILCtCQUFPQyx5QkFBUDtBQUNIO0FBQ0o7QUFDSixhQXJDRDtBQXNDSDtBQUNKLEtBNUN5QztBQUFBLENBQXpCLENBQWQiLCJmaWxlIjoicHJvcGVydHktbm90LWV4aXN0ZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIHByb3BlcnR5LW5vdC1leGlzdGVkIOeahOajgOa1i+mAu+i+ke+8jOajgOa1i+WxnuaAp+aYr+WQpuWtmOWcqFxuICogQGF1dGhvciBpZWxnbmF3KHd1amkwMjIzQGdtYWlsLmNvbSlcbiAqL1xuXG5pbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnO1xuaW1wb3J0IHBvc3Rjc3MgZnJvbSAncG9zdGNzcyc7XG5cbmltcG9ydCB7Z2V0UHJlZml4TGlzdH0gZnJvbSAnLi4vcHJlZml4ZXMnO1xuXG5jb25zdCBwcmVmaXhMaXN0ID0gZ2V0UHJlZml4TGlzdCgpO1xuXG4vKipcbiAqIOW9k+WJjeaWh+S7tuaJgOS7o+ihqOeahOinhOWImeWQjeensFxuICpcbiAqIEBjb25zdFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuY29uc3QgUlVMRU5BTUUgPSAncHJvcGVydHktbm90LWV4aXN0ZWQnO1xuXG4vKipcbiAqIOWFt+S9k+eahOajgOa1i+mAu+i+kVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIOWPguaVsFxuICogQHBhcmFtIHsqfSBvcHRzLnJ1bGVWYWwg5b2T5YmN6KeE5YiZ5YW35L2T6YWN572u55qE5YC8XG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0cy5maWxlQ29udGVudCDmlofku7blhoXlrrlcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLmZpbGVQYXRoIOaWh+S7tui3r+W+hFxuICovXG5leHBvcnQgY29uc3QgY2hlY2sgPSBwb3N0Y3NzLnBsdWdpbihSVUxFTkFNRSwgb3B0cyA9PlxuICAgIChjc3MsIHJlc3VsdCkgPT4ge1xuXG4gICAgICAgIGlmIChvcHRzLnJ1bGVWYWwpIHtcblxuICAgICAgICAgICAgY3NzLndhbGtEZWNscyhkZWNsID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZ2xvYmFsLkNTU0hJTlRfSU5WQUxJRF9BTExfQ09VTlQgPj0gb3B0cy5tYXhFcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc3QgcHJvcCA9IGRlY2wucHJvcDtcbiAgICAgICAgICAgICAgICBjb25zdCBzdGFuZGFyZFByb3BlcnR5ID0gcHJvcC5yZXBsYWNlKC9eXFwtKHdlYmtpdHxtb3p8bXN8bylcXC0vZywgJycpO1xuICAgICAgICAgICAgICAgIC8vIOagh+WHhuaooeW8j+WcqCBwcmVmaXhMaXN0IOS4re+8jOmCo+S5iOWmguaenCBwcm9wZXJ0eU5hbWUg5LiN5ZyoIHByZWZpeExpc3Qg5LitXG4gICAgICAgICAgICAgICAgLy8g5Y2z6L+Z5Liq5bGe5oCn55So6ZSZ5LqG77yM5L6L5aaCIC1vLWFuaW1hdGlvblxuICAgICAgICAgICAgICAgIGlmIChwcmVmaXhMaXN0LmluZGV4T2Yoc3RhbmRhcmRQcm9wZXJ0eSkgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJlZml4TGlzdC5pbmRleE9mKHByb3ApIDw9IC0xKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNvdXJjZSA9IGRlY2wuc291cmNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGluZSA9IHNvdXJjZS5zdGFydC5saW5lO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29sID0gc291cmNlLnN0YXJ0LmNvbHVtbjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0Lndhcm4oUlVMRU5BTUUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlOiBkZWNsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJ1bGVOYW1lOiBSVUxFTkFNRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lOiBsaW5lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbDogY29sLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJ0N1cnJlbnQgcHJvcGVydHkgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICdgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArIHByb3BcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnYCAnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJ2lzIG5vdCBleGlzdGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvck1lc3NhZ2U6ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJ0N1cnJlbnQgcHJvcGVydHkgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArICdgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICArIGNoYWxrLm1hZ2VudGEocHJvcClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnYCAnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgJ2lzIG5vdCBleGlzdGVkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBnbG9iYWwuQ1NTSElOVF9JTlZBTElEX0FMTF9DT1VOVCsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4pO1xuIl19